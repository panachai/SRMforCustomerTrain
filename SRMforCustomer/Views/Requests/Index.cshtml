@using SRMforCustomer.Models
@model SRMforCustomer.Models.Requests

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var requestType = (SelectList)ViewBag.RequestTypeId;
    //if (ViewBag.staffModelSession != null) {
    //    var staffModel = (Staff)ViewBag.staffModelSession;
    //}

}
<link href="~/Content/Site.css" rel="stylesheet" />
<link href="~/Content/Requests.css" rel="stylesheet" />
<div class="head_title">
    @ViewBag.TitleMessage
</div>

<div class="row input_content" style="padding-top:35px;">
    <form id="frmRequest" enctype="multipart/form-data">
        <div class="row">
            <div class="col-sm-6">
                <div class="valueinfo">ชื่อหัวข้อ</div>
                @Html.TextBoxFor(f => f.TopicName, new { @class = "form-control", placeholder = "ต้องการขยายเซิฟเวอร์", maxlength = "250", minlength = "3", oninput = @"this.value = this.value.replace(/[0-9]/g, ''); this.value = this.value.replace(/^\s+/, '');" })
                @Html.ValidationMessageFor(m => m.TopicName)
            </div>

            <div class="col-sm-6">
                <div class="valueinfo">ชื่อ-นามสกุล</div>
                @Html.TextBoxFor(f => f.CustomerName, new { @class = "form-control", placeholder = "ปณชัย นิยมกชกร", maxlength = "100", minlength = "3", oninput = @"this.value = this.value.replace(/[0-9]/g, ''); this.value = this.value.replace(/^\s+/, '');" })
                @Html.ValidationMessageFor(m => m.CustomerName)

            </div>
            <div class="col-sm-6">
                <div class="valueinfo">ประเภทการร้องขอ</div>
                @Html.DropDownListFor(f => f.RequestTypeId, requestType, "กรุณาเลือกการร้องข้อมูล", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.RequestTypeId)
            </div>
        </div>
        <div class="row input_padding">
            <div class="col-sm-6">
                <div class="valueinfo">เบอร์โทร</div>
                @Html.TextBoxFor(f => f.TelephoneNumber, new { @class = "form-control", placeholder = "0901234567", oninput = @"this.value = this.value.replace(/[^0-9]/g, '');", maxlength = "10", minlength = "9" })
                @Html.ValidationMessageFor(m => m.TelephoneNumber)
            </div>
            <div class="col-sm-6">
                <div class="valueinfo">อีเมล</div>
                @Html.TextBoxFor(f => f.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Email)
            </div>
        </div>

        <div>

            @Html.TextBoxFor(m => m.AttachmentFile, new { type = "file", accept = "image/*" })
            @Html.ValidationMessageFor(m => m.AttachmentFile)
            @*<input type="file" name="attachment" onchange= "FileValidate(this.value,5)" />*@ @*javascipt:*@
            @*<label id="alertFile" name="alertFile"></label>*@
        </div>


        <div class="row textbox_detail">
            <div class="valueinfo">รายละเอียด</div>
            @Html.TextAreaFor(m => m.Remark, new { @class = "form-control", style = "width: 100%; height: 100px;", oninput = @"this.value = this.value.replace(/^\s+/, '');" })
            @Html.ValidationMessageFor(m => m.Remark)
        </div>
        
        <div class="g-recaptcha" data-sitekey="6LcylSkUAAAAAJnF0kFLk59k2EBOxYGuMlmS9-Nk"></div>
        @ViewBag.reCapcha
    </form>



    <div style="padding-top:20px;margin: 0 15px;">
        <button class="button" id="sendEmail"> ส่งข้อมูล </button>
    </div>
</div>


@section scripts{
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/6.6.5/sweetalert2.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/6.6.5/sweetalert2.css" />
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/6.6.5/sweetalert2.js"></script>
    <script src='https://www.google.com/recaptcha/api.js'></script>

    <script>
        $("#sendEmail").click(function () {
            //swal({
            //    title: 'Send',
            //    text: "Are you sure to send",
            //    type: 'warning',
            //    showCancelButton: true,
            //    confirmButtonColor: '#3085d6',
            //    cancelButtonColor: '#d33',
            //    confirmButtonText: 'Yes, send',
            //    cancelButtonText: 'Wait',
            //    confirmButtonClass: 'btn btn-success',
            //    cancelButtonClass: 'btn btn-danger',
            //    buttonsStyling: false
            //}).then(function () {
                setfeedback();

            //    //swal(
            //    //    'Deleted!',
            //    //    'Your file has been deleted.',
            //    //    'success'
            //    //)

            //}, function (dismiss) {
            //    // dismiss can be 'cancel', 'overlay',
            //    // 'close', and 'timer'
            //    if (dismiss === 'cancel') {
            //        swal(
            //            'Cancelled',
            //            'Your imaginary file is safe :)',
            //            'error'
            //        )
            //    }
            //})
        });

        function setfeedback() {
            console.log($('#frmRequest').valid());
            if ($('#frmRequest').valid()) {
                $('#sendEmail').button('loading');
                //var model = $('#frmRequest').serialize();
                var model = new FormData($('#frmRequest')[0]);
                //model.append('Test', 'pojfpwoefpowepfohwepofhpowehpfowhepo'); //สามารถส่งข้อมูลเพิ่มได้ Syntax นี้ (กรณีใช้ FormData)
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("RequestProcess", "Requests")",
                    contentType: false,
                    processData: false,
                    dataType: false,
                    data: model,
                    success: function (response) {
                        if (response != null && response.success) {
                            var link = '@Html.ActionLink("Click", "Index", "TicketDetail", new {ticket = "ssss"}, null)';
                            link = link.replace("ssss", response.modelRequest.TicketId);

                            swal("Ticket ของท่านคือ " + response.modelRequest.TicketId,
                                //"สามารถตรวจสอบได้ที่ Email " + response.modelRequest.Email + "</br>" + "< a href= 'www.srmforcustomer.com\\search\\" + response.modelRequest.TicketId + "' > test</a > ",
                                "สามารถตรวจสอบได้ที่ Email " + response.modelRequest.Email + "</br>" + link,
                                "success");

                            $('#frmRequest')[0].reset();
                            $('#sendEmail').button('reset');
                            //Recaptcha.reload(); //for version1
                            grecaptcha.reset(); //for version2
                            //สั่งรีโหลดหน้าแทน

                            //window.location.reload();

                        } else {
                            //console.log(response.errors);
                            if (response.errors != null) {

                                var errors = response.errors;
                                for (var i = 0; i < errors.length; i++) {
                                    var error = errors[i];
                                    $('#' + error.Key).addClass('has-error');
                                }
                                swal("ไม่สำเร็จ", response.messageAlert, "error");
                            } else {
                                swal("ไม่สำเร็จ", response.messageAlert, "error");
                            }
                        }
                    },
                    error: function (errMsg) {
                        //console.log(errMsg.responseText);
                        swal("ยกเลิก", "โปรดป้อนข้อมูลให้ถูกต้อง", "error");
                    },
                    complete: function () {

                        //$('#frmRequest')[0].reset();
                        $('#sendEmail').button('reset');

                        //แก้ส่วนนี้ด้วย ให้ reset เฉพาะ complete

                    }
                });
            }
        }

        //function FileValidate(ctrlFile, MaxSize) {//พารามิเตอร์ที่รับเข้ามาคือตัวคอนโทรลของการอัพโหลดไฟล์ที่ต้องการตรวจสอบ(ctrlFile)
        //    //และขนาดสูงสุดของไฟล์ที่ยอมให้อัพโหลดในแต่ละคอนโทรล(MaxSize)
        //    var _validFileExtensions = [".jpg", ".jpeg", ".bmp", ".gif", ".png", ".pdf"];

        //    ////ดึงค่าชื่อของไฟล์ที่อัพโหลดที่ต้องการตรวจสอบ
        //    var sFileName = ctrlFile.value;

        //    /////ตรวจสอบเมื่อพบชื่อไฟล์ที่ดึง
        //    if (sFileName.length > 0) {
        //        var blnValid = false;
        //        //////////ตรวจสอบนามสกุลของไฟล์ที่ดึงมาจากชื่อไฟล์กับค่าของนามสกุลไฟล์ที่ยอมให้อัพโหลด
        //        //จากตัวแปร _validFileExtensions
        //        for (var j = 0; j < _validFileExtensions.length; j++) {
        //            var sCurExtension = _validFileExtensions[j];
        //            if (sFileName.substr(sFileName.length - sCurExtension.length, sCurExtension.length).toLowerCase() == sCurExtension.toLowerCase()) {
        //                blnValid = true;
        //                break;
        //            }
        //        }
        //        //////กรณีไฟล์ดังกล่าวมีนามสกุลที่แตกต่างจากที่กำหนดจะแสดงข้อความแจ้งเตือน
        //        และล้างค่าของชื่อไฟล์ในคอนโทรลอัพโหลดไฟล์ตัวดังกล่าว
        //        if (!blnValid) {
        //            alert("ไม่สามารถอัพโหลดไฟล์ดังกล่าวได้ เนื่องจากรองรับเฉพาะไฟล์ที่มีนามสกุลดังนี้เท่านั้น: " + _validFileExtensions.join(", "));
        //            ctrlFile.value = "";
        //            return false;
        //        }
        //        else {
        //            /////หากไฟล์ที่อัพโหลดมีนามสกุลไฟล์ตามที่ระบุ จะทำการตรวจสอบขนาดของไฟล์ว่าไม่เกินจากขนาดสูงสุด
        //            //ที่กำหนดหรือไม่ โดยมีการคำนวณหน่วยเป็น MB
        //            var fileSize = parseFloat(ctrlFile.files[0].size / 1048576).toFixed(2);

        //            /////หากขนาดของไฟล์เกินกว่าที่กำหนดจะแสดงข้อความแจ้งเตือน และล้างค่าไฟล์ที่ต้องการอัพโหลด
        //            //ในคอนโทรลอัพโหลดไฟล์ดังกล่าว
        //            if (fileSize > MaxSize) {
        //                alert(" ขออภัย ขนาดของไฟล์ที่ต้องการอัพโหลดมีขนาดใหญ่เกินกว่าทีกำหนด(" + MaxSize + " MB)");
        //                ctrlFile.value = "";
        //                return false;
        //            }
        //        }
        //    }
        //    return true;
        //}




    </script>

    @*<script src="~/Scripts/requestFunction.js"></script>*@


}